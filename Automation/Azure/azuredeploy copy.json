{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "description": "Installs the Cosmos CMS in Microsoft Azure."
    },
    "parameters": {
        "sendGridApiKey": {
            "type": "string",
            "metadata": {
                "description": "SendGrid account API Key for this application."
            }
        },
        "newGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "This random value is used to create a unique SQL password. You can change this to something else."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[resourceGroup().location]",
        "storageAccountName": "[concat('files', uniquestring(resourceGroup().id))]",
        "sqlDatabaseName": "cosmosdb",
        "sqlServerAdminName": "[concat('cosadmin', uniquestring(resourceGroup().id))]",
        "sqlServerName": "[concat('sqlserver', uniquestring(resourceGroup().id))]",
        "sqlServerPassword": "[concat('P', uniqueString(resourceGroup().id, deployment().name, parameters('newGuid')), 'x', '!')]",
        "appServicePlanName": "[concat('appplan', uniquestring(resourceGroup().id))]",
        "editorName": "[concat('editor-', uniquestring(resourceGroup().id))]",
        "publisherName": "[concat('publisher-', uniquestring(resourceGroup().id))]"
    },
    "resources": [
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "tags": {
                "displayName": "storage20201023"
            },
            "location": "[variables('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}/default/{1}', variables('storageAccountName'), '$web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-02-01-preview",
            "name": "[variables('sqlServerName')]",
            "location": "[variables('location')]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[variables('sqlServerAdminName')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled",
                "administratorLoginPassword": "[variables('sqlServerPassword')]"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(variables('sqlServerName'), '/', variables('sqlDatabaseName'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 5
            },
            "kind": "v12.0,user",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "isLedgerOn": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2021-02-01-preview",
            "name": "[format('{0}/{1}', variables('sqlserverName'), 'AllowAllWindowsAzureIps')]",
            "properties": {
                "endIpAddress": "0.0.0.0",
                "startIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "B1",
                "tier": "Basic",
                "size": "B1",
                "family": "B",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('editorName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ],
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('editorName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('editorName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|toiyabe/cosmoseditor:latest",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
                    ],
                    "tags": {
                        "displayName": "appsettings"
                    },
                    "properties": {
                        "CosmosAllowSetup": "true",
                        "CosmosPrimaryCloud": "azure",
                        "CosmosSendGridApiKey": "[parameters('sendGridApiKey')]",
                        "CosmosPublisherUrl": "[concat('https://', variables('publisherName'), '.azurewebsites.net')]",
                        "CosmosEditorUrl": "[concat('https://', variables('editorName'), '.azurewebsites.net')]",
                        "CosmosStorageUrl": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2018-07-01').primaryEndpoints.web]",
                        "CosmosBlobContainer": "$web",
                        "CosmosSecretKey": "[concat('CSK-', uniqueString(resourceGroup().id), uniqueString(variables('sqlServerPassword')))]",
                        "DOCKER_REGISTRY_SERVER_PASSWORD": "",
                        "DOCKER_REGISTRY_SERVER_URL": "https://index.docker.io",
                        "DOCKER_REGISTRY_SERVER_USERNAME": "",
                        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false"
                    }
                },
                {
                    "name": "connectionStrings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
                    ],
                    "properties": {
                        "BlobConnection": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',concat(listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2015-05-01-preview').key1))]",
                            "type": "Custom"
                        },
                        "DefaultConnection": {
                            "value": "[format('Data Source=tcp:{0},1433;Initial Catalog={1};User Id={2};Password={3};', reference(resourceId('Microsoft.Sql/servers', variables('sqlserverName'))).fullyQualifiedDomainName, variables('sqlDatabaseName'), variables('sqlServerAdminName'), variables('sqlServerPassword'))]",
                            "type": "SQLAzure"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2021-02-01",
            "name": "[concat(variables('editorName'), '/web')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|toiyabe/cosmoseditor:latest",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": true,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[concat('$', variables('editorName'))]",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": true,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.0",
                "ftpsState": "Disabled",
                "preWarmedInstanceCount": 0,
                "functionAppScaleLimit": 0,
                "healthCheckPath": "/Identity/Account/Login",
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('publisherName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ],
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('publisherName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('publisherName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|toiyabe/cosmospublisher:latest",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0,
                    "healthCheckPath": "/Identity/Account/Login"
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
                    ],
                    "tags": {
                        "displayName": "appsettings"
                    },
                    "properties": {
                        "CosmosPrimaryCloud": "azure",
                        "DOCKER_REGISTRY_SERVER_PASSWORD": "",
                        "DOCKER_REGISTRY_SERVER_URL": "https://index.docker.io",
                        "DOCKER_REGISTRY_SERVER_USERNAME": "",
                        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false"
                    }
                },
                {
                    "name": "connectionStrings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
                    ],
                    "properties": {
                        "DefaultConnection": {
                            "value": "[format('Data Source=tcp:{0},1433;Initial Catalog={1};User Id={2};Password={3};', reference(resourceId('Microsoft.Sql/servers', variables('sqlserverName'))).fullyQualifiedDomainName, variables('sqlDatabaseName'), variables('sqlServerAdminName'), variables('sqlServerPassword'))]",
                            "type": "SQLAzure"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
        "ipAddressForSendGrid": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', variables('editorName')), '2018-02-01').possibleOutboundIpAddresses]"
        },
        "sqlServerPassword": {
            "type": "string",
            "value": "[variables('sqlServerPassword')]"
        },
        "editorUrl": {
            "type": "string",
            "value": "[concat(variables('editorName'), '.azurewebsites.net')]"
        },
        "publisherUrl": {
            "type": "string",
            "value": "[concat(variables('publisherName'), '.azurewebsites.net')]"
        }
    }
}