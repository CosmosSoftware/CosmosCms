@using System.Reflection
@using Cosmos.Cms.Common.Services.Configurations;
@using Microsoft.Extensions.Options;
@inject IOptions<CosmosConfig> options
@{
    var assemblyName = Assembly.GetExecutingAssembly().GetName();
}
<!DOCTYPE HTML>
<html>
<head>
    <meta name="viewport" content="width=device-width" />

    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/lib/jquery-ui/themes/base/jquery-ui.min.css" />
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==" crossorigin="anonymous" referrerpolicy="no-referrer">

    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/ccms/js/TimeUtils.js"></script>

    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <!-- http://www.daterangepicker.com/ -->
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>

</head>
<body style="margin:0px;padding:0px;background-color:#4d4d4d;">

    <nav id="ccmsNavMenu" class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <img height="28" src="~/images/logos/cosmos-logo.png" /> Cosmos
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="btnSave" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            File
                        </a>
                        <ul class="dropdown-menu dropdown-menu-dark">
                            <li id="btnSaveChanges">
                                <a class="dropdown-item" title="Update existing page." onclick="bgEditClick('Save')" href="#">Save</a>
                            </li>
                            <li id="btnSaveAsDraft">
                                <a class="dropdown-item" title="Save as a new unpublished draft." onclick="bgEditClick('Draft')" href="#">Save new draft</a>
                            </li>
                            <li id="btnSaveAndPublish" style="display:none;">
                                <a class="dropdown-item" title="Save and publish now." onclick="bgEditClick('Publish')" href="#">Save and publish</a>
                            </li>
                            <li>
                                <a class="dropdown-item" onclick="bgEditClick('Close')">Close</a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li id="btnPreview">
                                <a class="dropdown-item" onclick="bgEditClick('Preview')">Preview</a>
                            </li>
                            <li id="btnFiles">
                                <a class="dropdown-item" onclick=" bgEditClick('Files')">File manager</a>
                            </li>
                            <li id="btnSourceCode" style="display:none">
                                <a class="dropdown-item" href="/Code/Source" target="_blank">Source code</a>
                            </li>
                            <li id="btnCcmsCodeEditor" style="display:none">
                                <a class="dropdown-item" onclick="bgEditClick('Code')">Code editor</a>
                            </li>
                            <li id="btnCcmsHtmlEditor" style="display:none">
                                <a class="dropdown-item" onclick="bgEditClick('Html')">Html editor</a>
                            </li>
                            <li id="liBtnVersions" style="display:none">
                                <a id="btnVersions" class="dropdown-item" target="_blank">Page versions</a>
                            </li>
                            <li>
                                <a class="dropdown-item" title="Open public (publisher) website" href="@options.Value.SiteSettings.PublisherUrl" target="_blank">Public Website</a>
                            </li>
                        </ul>
                    </li>
                    <li id="divAutoSave">
                        <div class="form-check form-switch mt-2 ms-3">
                            <input id="swAutoSave" class="form-check-input" type="checkbox" role="switch" checked="true">
                            <label id="lblAutoSave" style="font-size:0.8rem" class="form-check-label text-light" for="swAutoSave">Autosave (on)</label>
                        </div>
                    </li>
                    <li id="msgSaving">
                        <div class="btn btn-sm btn-secondary mt-1 ms-3">
                            <div id="spSaving" class="spinner-border spinner-border-sm text-light" role="status" style="display:none"></div>
                            <span id="btnSavingText">Saved</span>
                        </div>
                    </li>
                    <li>
                        <span id="timeZone" style="font-size:0.8rem" class="ms-3 me-3 fs-6"></span>
                    </li>
                    <li>
                        <div id="msgSpecial"></div>
                    </li>
                </ul>

            </div>
            <div class="d-flex">
                <div class="input-group input-group-sm" id="divTitleGroup">
                    <span class="input-group-text" id="lblTitle">Title:</span>
                    <div class="form-control" id="divTitle">@ViewData["PageTitle"]</div>
                    <input type="hidden" name="tbTitle" id="tbTitle" value="@ViewData["PageTitle"]" />
                </div>
                <div class="input-group input-group-sm">
                    <div id="lblPublished" class="input-group-text">Published:</div>
                    <input class="form-control" name="tbPublished" id="tbPublished" placeholder="DRAFT" value="@((DateTimeOffset?)ViewData["Published"])" />
                </div>
            </div>
        </div>
    </nav>

    @RenderBody()

    <div class="modal" id="checkSaveFirst" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Save First?</h5>
                </div>
                <div class="modal-body">
                    <div id="divSaveFirstDialog"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="saveFirst()" data-bs-dismiss="modal">Yes</button>
                    <button type="button" class="btn btn-secondary" onclick="doNotSave()" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="modalChangeTitle" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content bg-dark text-light">
                <div class="modal-header">
                    <h5 class="modal-title">Change Title</h5>
                </div>
                <div class="modal-body">
                    <form id="frmChangeTitle">
                        <div class="form-group">
                            <label for="currentTitle" title="Showing current title" class="control-label">Current title:</label>
                            <div class="form-control" id="currentTitle"></div>
                        </div>
                        <div class="form-group">
                            <label for="newTitle" class="control-label">New title:</label>
                            <input class="form-control" required id="newTitle" title="Enter new title" />
                            <span id="newTitleValidation" class="btn btn-sm btn-danger"></span>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-secondary">Change and Save</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="modalSavingError" tabindex="-2">
        <div class="modal-dialog">
            <div class="modal-header">
                <h5 class="modal-title">Save First?</h5>
            </div>
            <div class="modal-body bg-dark text-light">
                <div id="divErrorLog" class="text-light"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>

    <script>
        var next;
        var fileMgrPopup = null;
        var selectedFile = "";
        var lastPublished = "@(((DateTimeOffset?)ViewData["LastPubDateTime"]))";
        var autoSaveSwLastStatus;
        // Modal definitions
        let modalChangeTitle = new bootstrap.Modal(document.getElementById('modalChangeTitle'));
        var saveFirstModal = new bootstrap.Modal(document.getElementById('checkSaveFirst'));

        function getAutoSave() {
            return $("#swAutoSave").is(":checked");
        }

        function showSaving() {
            $("#spSaving").show();
            $("#btnSavingText").html("Saving...");
        }

        function showSaved() {
            $("#spSaving").hide();
            $("#btnSavingText").html("Saved");
        }

        function bgEditClick(command) {

            switch (command) {
                case "Draft":
                    $("#tbPublished").val("");
                    $("#Published").val("");
                    $("#SaveAsNewVersion").val("true");
                    $("#frmSave").submit();
                    break;
                case "Save":
                    $("#SaveAsNewVersion").val("false");
                    $("#frmSave").submit();
                    break;
                case "Publish":
                    var now = new Date();
                    $("#tbPublished").val(now.toLocaleString());
                    $("#Published").val(now.toLocaleString());

                    $("#SaveAsNewVersion").val("false");
                    $("#frmSave").submit();
                    break
                case "Files":
                    var id = $("#ArticleNumber").val();
                    var url = "@Url.Action("Index", "FileManager")";
                    if (typeof (id) !== "undefined" && id !== null & id !== "") {
                        url += "?target=pub/articles/" + id;
                    }

                    fileMgrPopup = window.open(url, '_blank', 'height=510,width=1200,menubar=no,location=no,status=no,titlebar=no,toolbar=no');
                    break;
                default:
                    // Executes functions specific to this editor
                    bgEditClickCustom(command);
                    break;
            }
        }

        function saveFirst() {
            saveChanges(saveFirstModal, next);
        }

        function doNotSave() {
            saveFirstModal.hide();
            next();
        }

        function getLocalTimeZone() {
            var datetime = new Date();
            var dateTimeString = datetime.toString();
            var timezone = dateTimeString.substring(dateTimeString.indexOf("(") - 1);
            return timezone;
        }

        function savePublishDateTime() {
            // Save date/time
            var dateTimeValue = $('#tbPublished').val();

            if ($("#Published").val() !== dateTimeValue) {
                $("#pendingChangesBadge").show();
            }

            // Note, this saves the date/time using local time (of the user's computer).
            // The server stores this as UTC time.
            if (dateTimeValue !== null && dateTimeValue !== "null" && dateTimeValue !== "") {
                var datetime = new Date(dateTimeValue);
                var utcString = datetime.toUTCString();
                $("#Published").val(utcString);
                $("#btnPublish").html("Published");
            } else {
                $("#btnPublish").html("DRAFT");
                $("#Published").val("");
            }
        }

        function btnChangeTitle() {
            return false;
        }

        $(document).ready(function () {
            var timeZoneElement = $("#timeZone");
            timeZoneElement.html(getLocalTimeZone());

            var startDate;
            if (lastPublished === "") {
                startDate = new Date();
            }
            else {
                startDate = new Date(lastPublished);
            }

            $('#tbPublished').daterangepicker({
                autoUpdateInput: false,
                timePicker: true,
                singleDatePicker: true,
                showDropdowns: true,
                minDate: startDate,
                locale: {
                    format: 'MM/DD/YYYY hh:mm A'
                }
            });

            $('#tbPublished').on('apply.daterangepicker', function (ev, picker) {
                $('#tbPublished').val(picker.startDate.format('MM/DD/YYYY hh:mm A'));
            });

            $("#btnSave").click(function () {
                if ($('#tbPublished').val() === "") {
                    $("#btnSaveAsDraft").hide();
                    $("#btnSaveAndPublish").show();
                } else {
                    $("#btnSaveAsDraft").show();
                    $("#btnSaveAndPublish").hide();
                }
            });

            $("#swAutoSave").click(function () {
                if ($("#swAutoSave").is(":checked")) {
                    $("#lblAutoSave").html("Autosave (on)");
                } else {
                    $("#lblAutoSave").html("Autosave (off)");
                }
            });

            $("#divTitleGroup").click(function () {
                $("#newTitleValidation").html();
                $("#newTitle").val("");
                $("#currentTitle").html($("#tbTitle").val());

                modalChangeTitle.show();
            });

            $("#frmChangeTitle").submit(function (e) {
                e.preventDefault();
                let articleNumber = $("#ArticleNumber").val();
                let title = $("#newTitle").val();
                let data = {
                    "articleNumber": articleNumber,
                    "title": title
                };
                $.post("@Url.Action("CheckTitle", "Editor")", data, function (result) {
                    if (result === true) {
                        let status = getAutoSave();
                        if (status) {
                            // Turn off auto save for the moment.
                            $('#swAutoSave').prop('checked', false); // Unchecks it
                        }
                        $("#newTitleValidation").html("");
                        $("#divTitle").html(title);
                        $("#tbTitle").val(title);
                        saveChanges(null, null);
                        $('#swAutoSave').prop('checked', status); // Return to last status
                    } else {
                        $("#newTitleValidation").html(result);
                    }
                });

            });
        });

        // Displays a 3 second message in a bootstrap toast.
        function toastMsg(message) {
            var toast = new bootstrap.Toast(document.getElementById('liveToast'));
            $("#liveToastMsg").html(message);
            toast.show();
            setTimeout(function () {
                toast.hide();
            }, 2000);
        }

        function saving() {
            //var toast = new bootstrap.Toast(document.getElementById('liveToast'));
            //$("#liveToastMsg").html("Saving... <img height='36' src='/images/az-busy.gif' >");
            //toast.show();
            showSaving();
        }

        function doneSaving() {
            showSaved();
        }

    </script>

    @await RenderSectionAsync("Scripts", false)
</body>
</html>
