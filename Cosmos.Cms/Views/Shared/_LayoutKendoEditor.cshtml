@using Cosmos.Cms.Common.Services.Configurations
@using Cosmos.Cms.Services
@using Microsoft.AspNetCore.Routing
@using Microsoft.Extensions.Options
@using System.Reflection
@inject IOptions<CosmosConfig> options
@model ArticleViewModel
@{
    /*
    This Layout is for use anywhere that Telerik/Kendo
    HTML WYSIWYG editor is used.

    Currently, this is used in these two places:
    Edit/Edit
    Template/Edit
     */
    // So we can display Cosmos version in
    var assemblyName = Assembly.GetExecutingAssembly().GetName();

    // Determine if this the Editor or Template controller
    var controllerName = (string)Context.GetRouteData().Values["controller"];

    // Used for ChatBot
    var userName = Context.User.Identity.Name;

    // Permissions configuration
    var isAuthor = false;
    if (User != null && User.IsInRole("Authors"))
    {
        isAuthor = true;
    }
    else if (User != null && User.IsInRole("Editors"))
    {
        isAuthor = false;
    }
    else if (User != null && User.IsInRole("Administrators"))
    {
        isAuthor = false;
    }

    var accountBtnTemplate = "<div id='userAcctMenu' style='font-size:0.8em'><span class='fa fa-user'></span> Account</div>";
}
<!DOCTYPE html>
<html>
<head>
    <title>@Model.Title</title>
    @* Layout head *@
    @Html.Raw(Model.Layout.Head)
    @* Page specific head *@
    @Html.Raw(Model.HeadJavaScript)
    @*
        Telerik/Kendo resources
    *@
    <link rel="stylesheet" href="~/lib/mdb-ui-kit/mdb.min.css" />
    <script src="~/lib/mdb-ui-kit/mdb.min.js"></script>
    <partial name="_KendoHeadPartial" />
    <script src="~/js/CosmosTimeZone.js"></script>
    <style>
        .k-widget.k-editor.k-editor-inline {
            background-color: inherit;
            color: inherit;
            border: 1px dashed blue;
            box-sizing: inherit;
        }

        .k-success {
            background-color: #06c91a;
        }

        .k-alert {
            background-color: #be4d25;
        }

        .k-i-insert-element {
            width: 36px !important;
            height: 30px !important;
        }

            .k-i-insert-element:before {
                font-family: FontAwesome;
                content: "\f0fe";
                font-size: 20px;
            }
    </style>
</head>
<body>
    @RenderBody()
    @* Kendo editor elements *@
    <form id="frmEdit" asp-action="Edit" method="post" kendo-validator="true">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="ArticleNumber" />
        <input type="hidden" asp-for="UrlPath" />
        <input type="hidden" asp-for="VersionNumber" />
        <input type="hidden" asp-for="Content" />
        <input type="hidden" asp-for="HeadJavaScript" />
        <input type="hidden" asp-for="FooterJavaScript" />
        <input type="hidden" asp-for="Published" />
        <input type="hidden" asp-for="RoleList" />
        <input type="hidden" asp-for="Title" />
        <input type="hidden" id="userName" value="@User.Identity?.Name" />
    </form>
    @* Dialogs *@
    <kendo-dialog name="saveChangesDialog" title="Please Wait" modal="true" visible="false" min-width="500">
        <content>
            <div>
                <p>Saving changes...</p>
            </div>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="changesSavedDialog" title="Changes Saved" modal="true" visible="false" min-width="500">
        <content>
            <div>
                <p>Your changes have been successfully saved.</p>
                <div class="form-group">
                    <span>Version saved:</span>
                    <span id="savedVersionNo"></span>
                </div>
            </div>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="versionsDialog" title="Page Versions" modal="true" visible="false" min-width="500">
        <content>
            <p>This will be version to be saved. Continue?</p>
        </content>
        <actions>
            <action text="Cancel">
            </action>
            <action action="goVersions" primary="true" text="Yes" title="Confirm">
            </action>
        </actions>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="editCodeDialog" title="Edit Code" modal="true" visible="false" min-width="500">
        <content>
            <p>You are about to edit code for this page. This will save the current version before proceeding. Are you ready?</p>
        </content>
        <actions>
            <action text="Cancel">
            </action>
            <action action="editCode" primary="true" text="Yes" title="Confirm">
            </action>
        </actions>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="saveErrorsDialog" title="Errors Log" modal="true" visible="false" min-width="700">
        <content>
            <div id="divErrorLog">
            </div>
        </content>
        <actions>
            <action text="Close">
            </action>
        </actions>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <kendo-dialog name="closeEditorDialog" title="Close Editor" modal="true" visible="false" min-width="700">
        <content>
            <p><span class="badge badge-warning">Warning:</span> Any unsaved changes will be lost!</p>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
        <actions>
            <action text="Cancel">
            </action>
            <action action="closeEditor" primary="true" text="Close" title="Confirm">
            </action>
        </actions>
    </kendo-dialog>
    <kendo-dialog name="permissionsDialog" title="Permissions Editor" modal="true" visible="false" min-width="700">
        <content>
            <h4><span class="fa fa-shield"></span> Page View Permissions</h4>
            <hr />
            <p></p>
            <p>Use this tool to set which user role(s) can see this page.</p>
            @(Html.Kendo().MultiSelect()
            .Name("roleListMS")
            .DataTextField("RoleName")
            .DataValueField("RoleName")
            .Placeholder("Select roles...")
            .AutoBind(false)
            .DataSource(source =>
            {
            source.Read(read => { read.Action("Get_RoleList", "Editor"); })
            .ServerFiltering(true);
            })
            )
            <p></p>
            <p><span class="badge badge-danger">WARNING: </span> This will immediately set permissions for all versions of this page.</p>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
        <actions>
            <action text="Cancel">
            </action>
            <action action="saveRoleListMultiSelect" text="Set Permissions" title="Save Permissions">
            </action>
        </actions>
    </kendo-dialog>
    <kendo-dialog name="schedulingDialog" title="Publishing Date" modal="true" visible="false" min-width="700">
        <content>
            <h4><span class="fa fa-calendar"></span> Publishing Date/Time</h4>
            <hr />
            <p></p>
            <p>Set the day and time when this page will be made visible on the web.</p>
            <p>Tips:</p>
            <ul>
                <li>Pick now or a date/time in the past to publish right away.</li>
                <li>Pick a date/time later on to schedule publishing in the future.</li>
                <li>
                    Removing or clearing out the date/time will &quot;un-publish&quot; this version.
                    <ul>
                        <li>If no prior version exists, this page will not appear on the web.</li>
                        <li>Otherwise, the prior <em>published</em> version will appear instead.</li>
                    </ul>
                </li>
            </ul>
            <div class="row">
                <div class="col-6">
                    @(Html.Kendo().DateTimePicker().Name("dtPublished").Enable(User.IsInRole("Editors") || User.IsInRole("Administrators")))
                </div>
                <div class="col-4">
                    @Html.Kendo().Button().Name("btnPublishNow").Content("Publish Now").Events(eve => eve.Click("onPubNow"))
                </div>
            </div>
            <div class="col">
                @Html.Kendo().Button().Name("timeZone")
            </div>
            <p></p>
            <div class="form-row">
                <div class="col">
                    <div class="k-button k-button-sm k-button-primary" onclick="cancelPublish()">Clear Date/Time</div>
                </div>
            </div>
            <p></p>
            <p><span class="badge badge-warning">Note: </span> This will immediately set permissions for all versions of this page.</p>
        </content>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
        <actions>
            <action action="cancelPublishDateTime" text="Cancel">
            </action>
            <action action="savePublishDateTime" text="Set Date/Time" title="Save Date/Time">
            </action>
        </actions>
    </kendo-dialog>
    <kendo-window name="ccmsInsertWindow" visible="false" title="Insert Content" draggable="true" resizable="true" width="800">
        <content>
            <kendo-tabstrip name="tabstrip">
                <popup-animation>
                    <open effects="fade:in" />
                </popup-animation>
                <items>
                    <tabstrip-item text="Web page link" selected="true">
                        <content>
                            <div class="row">
                                <div class="col">
                                    <form id="ccmsInsertAnchorFrm">
                                        <h5 class="text-light">Insert Link Tool</h5>
                                        <label for="ccmsPageOrUrl">Type to select a page on this website, or enter URL to another website, or select a file:</label>
                                        <div class="input-group mb-3">
                                            <kendo-combobox name="ccmsPageOrUrl" filter="FilterType.Contains" placeholder="Enter page title or URL" datatextfield="Title" datavaluefield="UrlPath" auto-bind="false" min-length="2" class="form-control">
                                                <datasource server-filtering="true">
                                                    <transport>
                                                        <read url="@Url.Action("List_Articles", "Editor")" />
                                                    </transport>
                                                </datasource>
                                            </kendo-combobox>
                                            @(Html.Kendo().Button().Name("ccmsSelFileBtn").Content("<i title='Select file' class='fa-solid fa-square-plus'></i>").Events(eve => eve.Click("ccmsOpenFileMgr")))
                                        </div>
                                        <div class="mb-3">
                                            <label for="ccmsAnchorSelectedContent">Link text:</label>
                                            @(Html.Kendo().TextBox().Name("ccmsAnchorSelectedContent"))
                                        </div>
                                        <div class="mb-3">
                                            <label for="ccmsAnchorTitleText">Link tool tip text:</label>
                                            @(Html.Kendo().TextBox().Name("ccmsAnchorTitleText"))
                                        </div>
                                        <div class="mb-3">
                                            <label for="ccmsAnchorTitleText">CSS Class(s):</label>
                                            @(Html.Kendo().TextBox().Name("ccmsAnchorCssClasses"))
                                        </div>
                                        <div class="mb-3">
                                            <label for="ccmsAnchorStyle">CSS style:</label>
                                            @(Html.Kendo().TextBox().Name("ccmsAnchorStyle"))
                                        </div>
                                        <div class="mb-3">
                                            @(Html.Kendo().CheckBox().Name("ccmsLinkOpenNewWin").Checked(false).Label("Open link in new window"))
                                        </div>
                                        <div class="mb-3">
                                            <kendo-button name="ccmsInsertAnchorBtn" on-click="ccmsInsertAnchor">Insert</kendo-button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </content>
                    </tabstrip-item>
                    <tabstrip-item text="Insert image">
                        <content>
                            <div class="row">
                                <div class="col">
                                    <form id="ccmsInsertImageFrm">
                                        <h5 class="text-light">Insert Image Tool</h5>
                                        <label for="ccmsInsertImageUrl">Image URL:</label>
                                        <div class="input-group mb-3">
                                            @(Html.Kendo().TextBox().Name("ccmsInsertImageUrl").Placeholder("Image url").HtmlAttributes(new { @class = "form-control" }))
                                            @(Html.Kendo().Button().Name("ccmsSelImageBtn").Content("<i title='Select image' class='fa-solid fa-square-plus'></i>").Events(eve => eve.Click("ccmsOpenImageMgr")))
                                        </div>
                                         <div class="mb-3">
                                            <label for="ccmsAnchorTitleText">Image alternative (alt) text:</label>
                                            @(Html.Kendo().TextBox().Name("ccmsImageAltText"))
                                        </div>
                                        <div class="mb-3">
                                            <label for="ccmsAnchorTitleText">CSS Class(s):</label>
                                            @(Html.Kendo().TextBox().Name("ccmsImageCssClasses"))
                                        </div>
                                        <div class="mb-3">
                                            <label for="ccmsAnchorStyle">CSS style:</label>
                                            @(Html.Kendo().TextBox().Name("ccmsImageStyle"))
                                        </div>
                                        <div class="form-row">
                                            <div class="col">
                                                <div class="input-group mb-3">
                                                    @(Html.Kendo().TextBox().Name("ccmsInsertImageWidth").Placeholder("Enter number (optional)").HtmlAttributes(new { @class = "form-control" }))
                                                    <span class="input-group-text text-light">Width</span>
                                                </div>
                                            </div>
                                            <div class="col">
                                                <div class="input-group mb-3">
                                                    @(Html.Kendo().TextBox().Name("ccmsInsertImageHeight").Placeholder("Enter number (optional)").HtmlAttributes(new { @class = "form-control" }))
                                                    <span class="input-group-text text-light">Height</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <kendo-button name="ccmsInsertImageBtn" on-click="ccmsInsertImage">Insert</kendo-button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </content>
                    </tabstrip-item>
                </items>
            </kendo-tabstrip>
        </content>
    </kendo-window>
    @*
        Cosmos toolbar is added last to make sure it is overlayed over everything at the top of this page.
    *@
    <nav id="k-ccms-ToolBar" class="navbar navbar-expand-md fixed-top" style="height: 52px; background-color:#363636 !important">
        <div class="container-fluid">
            @(Html.Kendo().ToolBar()
            .Name("ccms-kendo-toolBar")
            .Items(items =>
            {
            items.Add().Type(CommandType.SplitButton).Text("Menu").Id("ddMenu").MenuButtons(menuButtons =>
            {
            menuButtons.Add().Text("Save");
            menuButtons.Add().Text("Code View");
            menuButtons.Add().Text("Files");
            menuButtons.Add().Text("Preview");
            menuButtons.Add().Text("Versions");
            menuButtons.Add().Text("Close");
            menuButtons.Add().Text("Permissions").Hidden(!User.IsInRole("Editors") && !User.IsInRole("Administrators"));
            menuButtons.Add().Text("Help");
            }).Click("bgEditClick").Hidden(controllerName == "Templates");

            items.Add().Type(CommandType.Button).Text("<span id='btnPublish'></span>").Click("openSchedulerDialog").Hidden(isAuthor);
            items.Add().Type(CommandType.Button).Template("<div class='btn btn-primary' onclick='openPermissionsDialog()' style='height:32px' id='btnPermissions'><span class='fa fa-shield'></span></div>").Hidden(isAuthor);


            items.Add().Template("<div id='pendingChangesBadge' class='badge badge-warning' style='display:none'>Changes Pending Save</div>");
            items.Add().Type(CommandType.Button).Text("Ready to Edit").Id("ccms-edit-lock-btn").Click("ccmsEditButtonOnClick"); // ccmsEditButtonOnClick found on _ChatComponentPartial
            items.Add().Template("<span>Title: </span>");
            items.Add().Template(Html.Kendo().TextBox().Name("tbTitle").Value(Model.Title).HtmlAttributes(new {style = "width: 32vw;"}).ToHtmlString());

            items.Add().Type(CommandType.SplitButton).Template(accountBtnTemplate).MenuButtons(menuButtons =>
            {
            menuButtons.Add().Text("User Account");
            menuButtons.Add().Text("Log Out");
            }).Click("bgEditClick");

                @*if (isAuthor) {
                    items.Add().Template("<a style='font-size:0.8em' title='Your role with this page is that of an Author'>(Author)</a>");
                    } else if (isEditor)
                    {
                    items.Add().Template("<a style='font-size:0.8em' title='Your role with this page is that of an Editor'>(Editor)</a>");
                    } else if (isAdministrator)
                    {
                    items.Add().Template("<a style='font-size:0.8em' title='Your role with this page is that of an Editor'>(Administrator)</a>");
                    }*@

            items.Add().Type(CommandType.Button).Template("<div style='padding-top:4px;display:none;' class='k-button k-button-sm k-button-secondary' id='cdnLbl'></div> <div id='progressBar' style='width:80px'></div>");

            items.Add().Template("<div><span id='versInfo' style='margin-right:10px;font-size:0.6em;'>" + @assemblyName.Version + "</span> </div>");

            items.Add().Type(CommandType.Button).Click("hideToolBar").Text("<span title='Collapse toolbar' class='k-icon k-i-arrow-left'></span>");
            })
            )
            @* This button is required to by the Chat Component *@
            <partial name="_ChatButtonPartial" />
        </div>
    </nav>
    <div id="k-ccms-showBar" style="display:none;position:absolute;top:0px;left:0px;z-index:2000000">
        <button type="button" class="k-button k-button-md k-button-rectangle k-rounded-md k-button-solid k-button-solid-base ccms-chat-toast-trigger">
            Chat
        </button>
        @(Html.Kendo().Button().Name("btnShowToolBar").Events(eve => eve.Click("showToolBar")).Content("<span title='Expand toolbar' class='k-icon k-i-arrow-right'></span>"))
    </div>
    <style>
        #ccms-kendo-toolBar {
            width: 100%;
        }
    </style>
    <script>
        function hideToolBar(e){
            $("#k-ccms-ToolBar").hide();
            $("#k-ccms-showBar").show();
        }
        function showToolBar(e){
            $("#k-ccms-ToolBar").show();
            $("#k-ccms-showBar").hide();
        }
    </script>

    @* Bootstrap 5 JS*@
    <script src="/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    @* Editor script block *@
    <script>

        var editors = [];
        var cdnDetail = "";
        var editorsLoaded = false;
        var fileMgrPopup = null;
        var validationSummary = $("#validation-summary");
        var ccmsSelectedFile = "";
        var ccmsActiveEditor = null;
        var ccmsEditorMark;
        var ccmsEditorSelection;
        var ccmsEditorHtmlSelection;
        var ccmsEditorRange;
        var editorType = "ArticleEditor";

        function insertItemTool(editor, e) {
            ccmsEditorSelection = editor.getSelection();
            ccmsEditorHtmlSelection = editor.selectedHtml();
            ccmsEditorRange = ccmsEditorSelection.getRangeAt(0);
            //var test = ccmsEditorRange.toString();
            //var fragment = ccmsEditorRange.extractContents();
            $("#ccmsAnchorSelectedContent").data("kendoTextBox").value(ccmsEditorHtmlSelection);
            ccmsActiveEditor = editor;
            var win = $("#ccmsInsertWindow").data("kendoWindow");
            win.center();
            win.open();
        }

        function ccmsInsertAnchor(e) {
            e.preventDefault();
            var win = $("#ccmsInsertWindow").data("kendoWindow");
            win.close();

            var combobox = $("#ccmsPageOrUrl").data("kendoComboBox");
            var cssAnchorText = $("#ccmsAnchorSelectedContent").data("kendoTextBox").value();
            var cssClass = $("#ccmsAnchorCssClasses").data("kendoTextBox").value();
            var cssStyle = $("#ccmsAnchorStyle").data("kendoTextBox").value();
            var cssTitle = $("#ccmsAnchorTitleText").data("kendoTextBox").value();

            var url = combobox.value();
            var text = combobox.text();

            if (url === "") {
                url = combobox.text();
            }
            else if (!url.toLowerCase().startsWith("http://") && !url.toLowerCase().startsWith("https://") ) {
                url = "/" + url;
            }

            // Create the link.
            //var link = "<a href='" + url + "' " + newWin + ">" + $("#ccmsAnchorSelectedContent").val() + "</a>";
            var anchor = $("<a></a>").text(cssAnchorText);
            anchor.attr("href", url);

            if (cssClass !== null && cssClass !== "") {
                anchor.attr("class", cssClass);
            }

            if (cssStyle !== null && cssStyle !== "") {
                anchor.attr("style", cssStyle);
            }

            if (cssTitle !== null && cssTitle !== "") {
                anchor.attr("title", cssTitle);
            }

            if ($('#ccmsLinkOpenNewWin').is(':checked')) {
                anchor.attr("target", "_blank");
            }

            // Use this order when updating the editor content.
            ccmsActiveEditor.selectRange(ccmsEditorRange);
            ccmsActiveEditor.focus();

            var anchorHtml = anchor.prop("outerHTML");

            ccmsActiveEditor.exec("inserthtml", { value: anchorHtml });
        }

        function ccmsInsertImage(e) {
            e.preventDefault();

            var win = $("#ccmsInsertWindow").data("kendoWindow");
            win.close();

            
            var cssImageUrl = $("#ccmsInsertImageUrl").data("kendoTextBox").value();
            var cssImageAltText = $("#ccmsImageAltText").data("kendoTextBox").value();
            var cssImageCssClass = $("#ccmsImageCssClasses").data("kendoTextBox").value();
            var cssImageStyle = $("#ccmsImageStyle").data("kendoTextBox").value();
            var ccmsImageWidth = $("#ccmsInsertImageWidth").data("kendoTextBox").value();
            var ccmsImageHeight = $("#ccmsInsertImageHeight").data("kendoTextBox").value();

            // Create the image tag.
            var image = $("<img></img>").attr("src", cssImageUrl);

            if (cssImageAltText !== null && cssImageAltText !== "") {
                image.attr("alt", cssImageAltText);
            }

            if (cssImageCssClass !== null && cssImageCssClass !== "") {
                image.attr("class", cssImageCssClass);
            }

            if (cssImageStyle !== null && cssImageStyle !== "") {
                image.attr("style", cssImageStyle);
            }
            
            if (ccmsImageWidth !== null && ccmsImageWidth !== "") {
                image.attr("width", ccmsImageWidth);
            }
            
            if (ccmsImageHeight !== null && ccmsImageHeight !== "") {
                image.attr("height", ccmsImageHeight);
            }

            if ($('#ccmsLinkOpenNewWin').is(':checked')) {
                image.attr("target", "_blank");
            }

            // Use this order when updating the editor content.
            ccmsActiveEditor.selectRange(ccmsEditorRange);
            ccmsActiveEditor.focus();

            var imageHtml = image.prop("outerHTML");

            ccmsActiveEditor.exec("inserthtml", { value: imageHtml });
        }

        function fixUrl(fieldName) {
            var input = $(fieldName);
            path = input.val();
            if (path !== null && typeof (path) !== "undefined" && path.length > 0) {
                path = path.replaceAll("%2F", "/");
                input.val(path);
            }
        }

        // PERMISSIONS FUNCTIONS
        function loadRoleListMultiSelect() {
            var roleListMs = $("#roleListMS").data("kendoMultiSelect");
            var roles = $("#RoleList").val().split(",");
            roleListMs.value(roles);
            updatePermissionsBtn();
        }

        function saveRoleListMultiSelect() {

            var roleListMs = $("#roleListMS").data("kendoMultiSelect");
            var roleList = roleListMs.dataItems().map(x => x.RoleName).join(",");

            if ($("#RoleList").val() !== roleList) {
                $("#pendingChangesBadge").show();
            }

            $("#RoleList").val(roleList);

            updatePermissionsBtn();
        }

        function updatePermissionsBtn() {
            var roles = $("#RoleList").val().split(",");
            var btnPermissions = $("#btnPermissions");
            btnPermissions.removeClass();
            if (typeof roles === "undefined" || roles === null || roles.length < 1 || (roles.length === 1 && roles[0] === "")) {
                btnPermissions.addClass("k-button k-button-sm k-button-secondary");
                $(btnPermissions).kendoTooltip({
                    content: "No permissions set."
                });
            } else {
                btnPermissions.addClass("k-button k-button-sm k-button-warning");
                $(btnPermissions).kendoTooltip({
                    content: "Allowed roles: " + $("#RoleList").val() + "."
                });
            }
        }

        function openPermissionsDialog() {
            $("#permissionsDialog").data("kendoDialog").open();
        }

        // EDITOR UTILITIES
        function loadEditors() {
            var elements = $("[data-ccms-ceid]");
            $(elements).each(function () {
                deployEditor(this);
                $(this).click(function (event) {
                    if (ccmsEditorIsLocked !== true) {
                      ccmsSendSignal("SetArticleLock");
                    } else {
                        event.preventDefault();
                        alert("Cannot edit while locked by another user.");
                    }
                });
            });
        }

        function loadCdnProgBar(maxValue) {
            $("#progressBar").kendoProgressBar({
                min: 0,
                max: maxValue,
                type: "percent"
            });
        }

        function deployEditor(element) {

            var blobUrl = "@((string) ViewData["BlobEndpointUrl"])";

            var toolList = [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "insertUpperRomanList",
                "insertLowerRomanList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "insertImage",
                "insertFile",
                "tableWizard",
                "createTable",
                "addRowAbove",
                "addRowBelow",
                "addColumnLeft",
                "addColumnRight",
                "deleteRow",
                "deleteColumn",
                "mergeCellsHorizontally",
                "mergeCellsVertically",
                "splitCellHorizontally",
                "splitCellVertically",
                "tableAlignLeft",
                "tableAlignCenter",
                "tableAlignRight",
                "viewHtml",
                "formatting",
                "cleanFormatting",
                "foreColor",
                "backColor",
                {
                    name: "insertElement",
                    tooltip: "Inserts a link or an image into page.",
                    exec: function(e) { insertItemTool($(this, e).data("kendoEditor")); }
                 }
            ];

            var tools = $(element).attr("ccms-editor-tools");
            if (tools !== null && tools !== "" && typeof tools !== "undefined") {
                toolList = tools.split(",");
            }


            $(element).kendoEditor({
                tools: toolList,
                imageBrowser: {
                    fileTypes: "@AllowedFileExtensions.ImageUploadsFilter",
                    transport: {
                        read: "@Url.Action("ImageBrowserRead", "FileManager")",
                        imageUrl: blobUrl + "{0}",
                        thumbnailUrl: "@Url.Action("CreateThumbnail", "FileManager")"
                    }
                },
                fileBrowser: {
                    fileTypes: "@AllowedFileExtensions.FileUploadsFilter",
                    transport: {
                        read: "@Url.Action("FileBrowserRead", "FileManager")",
                        fileUrl: blobUrl + "{0}"
                    }
                }
            });

            // Add to the editor array
            editors.push(element);
        }

        function removeEditors() {
            $(editors).each(function() {
                var element = $(this);
                var editor = $(this).data("kendoEditor");
                if (editor !== null && typeof(editor) !== "undefined") {
                    //editor.close();
                    editor.destroy();
                }
                $(["k-widget", "k-editor", "k-editor-inline"]).each(function(i, css) {
                    element.removeClass(css);
                });

                if (element.attr("class").trim() === "") {
                    element.removeAttr("class");
                }

                if (element.attr("data-role") === "editor") {
                    element.removeAttr("data-role");
                }
            });

            editors = [];
        }

        function editorSave(id, type, value) {
            // Find the editor
            var editor = $("#" + id).data(type);
            if (editor !== null && typeof (editor) !== "undefined") {
                // ReSharper disable once QualifiedExpressionMaybeNull
                editor.value(value);
            } else {
                editor = $("#" + id);
                editor.html(value);
            }
        }

        function closeEditor() {
            window.location.href = "@Url.Action("Versions", "Editor", new {Id = Model.ArticleNumber})";
        }

        function onPubNow(e) {
            var now = new Date();
            now = now.toUTCString();
            $("#Published").val(now);
            loadPublishLocalDateTime();
        }

        // SCHEDULING PUBLISHING UTILITIES
        function loadPublishLocalDateTime() {
            var published = $("#Published").val();
            var publishButton = $("#btnPublish");
            if (published !== null && typeof (published) !== "undefined" && published.trim() !== "") {

                if (!published.endsWith("Z") && !published.endsWith("GMT")) {
                    published += " GMT";
                }

                var localDateTime = new Date(published);
                var dateTimePicker = $("#dtPublished").data("kendoDateTimePicker");
                dateTimePicker.value(localDateTime);
                var now = new Date();

                if (now < localDateTime) {
                    //publishButton.attr("class", "k-button k-primary");
                    publishButton.html("Pending");
                    $(publishButton).kendoTooltip({
                        content: "This version is set to be published in the future at: " + localDateTime.toLocaleString() + ". Click to change."
                    });
                } else {
                    //publishButton.attr("class", "k-button k-success");
                    publishButton.html("Published");
                    $(publishButton).kendoTooltip({
                        content: "This version is now published and available on the web as of: " + localDateTime.toLocaleString() + ". Click to change."
                    });
                }
            } else {
                //publishButton.attr("class", "k-button k-alert");
                publishButton.html("DRAFT");
                $(publishButton).kendoTooltip({
                    content: "This version is not yet published. Click to schedule publishing date and time."
                });
            }
        }

        function openSchedulerDialog() {
            $("#schedulingDialog").data("kendoDialog").open();
        }

        function cancelPublish() {
            var dateTimePicker = $("#dtPublished").data("kendoDateTimePicker");
            dateTimePicker.value("");
        }

        function savePublishDateTime() {
            // Save date/time
            var dateTimePicker = $("#dtPublished").data("kendoDateTimePicker");
            var dateTimeValue = dateTimePicker.value();

            if ($("#Published").val() !== dateTimeValue) {
                $("#pendingChangesBadge").show();
            }

            // Note, this saves the date/time using local time (of the user's computer).
            // The server stores this as UTC time.
            if (dateTimeValue !== null && dateTimeValue !== "null" && dateTimeValue !== "") {
                var datetime = new Date(dateTimeValue);
                var utcString = datetime.toUTCString();
                $("#Published").val(utcString);
                $("#btnPublish").html("Published");
            } else {
                $("#btnPublish").html("DRAFT");
                $("#Published").val("");
            }

            //loadPublishLocalDateTime();
        }

        function cancelPublishDateTime() {
            loadPublishLocalDateTime();
            $("#schedulingDialog").data("kendoDialog").close();
        };

        function ccmsOpenImageMgr(e) {
            ccmsOpenFileMgr(e, 'i');
        }

        function ccmsOpenFileMgr(e, option) {
            if (typeof (e) !== "undefined" && e !== null && e !== "") {
                e.preventDefault();
            }
            if (option !== null && option !== "" && option === "i") {
                fileMgrPopup = window.open('@Url.Action("Popup", "FileManager")/' + option, '_blank', 'height=510,width=1200,menubar=no,location=no,status=no,titlebar=no,toolbar=no');        
            } else {
                fileMgrPopup = window.open('@Url.Action("Popup", "FileManager")', '_blank', 'height=510,width=1200,menubar=no,location=no,status=no,titlebar=no,toolbar=no');        
            }
        }

        // Handles button bar click - edit button.
        function bgEditClick(e) {
            var command = e.target.text();
            switch (command) {
                case "Save":
                    handlePost();
                    break;
                case "Code View":
                    $("#editCodeDialog").data("kendoDialog").open();
                    break;
                case "Files":
                     ccmsOpenFileMgr();
                break;
                case "Versions":
                    openVersionsDialog();
                    break;
                case "Close":
                    showCloseEditorDialog();
                    break;
                case "Preview":
                    window.open("@Url.Action("Preview", "Home", new {Model?.Id})");
                    break;
                case "Permissions":
                    openPermissionsDialog();
                    break;
                case "Help":
                    window.open("https://cosmos.azureedge.net/edit_page#HtmlEditor");
                    break;
                case "User Account":
                    window.location.href = "@Url.Page("/Account/Manage/Index", new {area = "Identity"})";
                    break;
                case "Log Out":
                    $("#frmLogout").submit();
                    break;
            }
        }

        function handlePost() {

            if (ccmsEditorIsLocked === true) {
                alert("Cannot save while locked by another user.");
                return;
            }

            $("#saveChangesDialog").data("kendoDialog").open();

            var validator = $("#frmEdit").data("kendoValidator");
            $("#divErrorLog").html("");

            if (validator.validate()) {

                $("#saveChangesDialog").data("kendoDialog").open();

                // Save the date with the time zone
                savePublishDateTime();

                // Close and remove editors
                removeEditors();

                // save the page content.
                saveContent();

                // Save title
                $("#Title").val($("#tbTitle").val());

                processKendoCtrls("listbox", "kendoDropDownList");
                var data = $("#frmEdit").serialize();

                // Strip Zero width characters from data
                // https://stackoverflow.com/questions/11305797/remove-zero-width-space-characters-from-a-javascript-string
                data = data.replace(/[\u200B-\u200D\uFEFF]/g, '');

                // No template change, may do ajax post.
                $.post("@Url.Action("SaveHtml", controllerName)",
                    data,
                    function(response) {
                        $("#pendingChangesBadge").hide();
                        if (response.IsValid) {
                            $("#previewItem").show();
                            ccmsSendSignal("ArticleSaved"); // Defined in the chat components partial
                            if (response.CdnResult !== null && typeof (response.CdnResult) !== "undefined" && response.CdnResult !== "") {
                                cdnProgress(response.CdnResult.EstimatedSeconds, response.CdnResult.Detail);
                            }
                        } else {
                            var errorMsg = "<h5>Error(s) detected while saving:</h5>";

                            // Invalid response.
                            $.each(response.Errors,
                                function(index, error) {
                                    errorMsg = "<p>" + error.Key + "</p><ul>";
                                    $.each(error.Errors,
                                        function(index, innerError) {
                                            errorMsg = errorMsg + "<li>" + innerError.ErrorMessage + "</li>";
                                        });
                                    errorMsg = errorMsg + "</ul>";
                                });
                            $("#divErrorLog").html(errorMsg);
                            $("#saveErrorsDialog").data("kendoDialog").open();
                        }
                        //
                        // Save the data that came back.
                        //
                        ccmsLoadModel(response.Model);


                        $("#saveChangesDialog").data("kendoDialog").close();
                        if (response.IsValid) {
                            $("#changesSavedDialog").data("kendoDialog").open();
                            setTimeout(function() {
                                    $("#changesSavedDialog").data("kendoDialog").close();
                                },
                                1000);
                        }
                    });
            } else {
                validationSummary.html("<p>Cannot save because this page has errors.</p>");
            }
            return false;
        }

        function ccmsLoadModel(model) {
            //
            // Save the data that came back.
            //
            $("#Id").val(model.Id);
            $("#btnPreview").attr("href", "@Url.Action("Preview", "Home")/" + model.Id);
            $("#ArticleNumber").val(model.ArticleNumber);

            // Template name
            editorSave("eTemplateName", "kendoDropDownList", model.TemplateName);

            $("#UrlPath").val(model.UrlPath);

            // Version
            $("#VersionNumber").val(model.VersionNumber);
            $("#versionLbl").text("Version: " + model.VersionNumber);

            // Published
            $("#Published").val(model.Published);
            loadPublishLocalDateTime();

            // Role list
            $("RoleList").val(model.RoleList);
            loadRoleListMultiSelect();
            updatePermissionsBtn();

            // Title
            editorSave("eTitle", "kendoEditor", model.Title);

            // Load Content
            $("#eContent").html(model.Content);

            $("#savedVersionNo").text(model.VersionNumber);

            loadEditors();
        }

        function cdnProgress(seconds, detail) {
            $("#cdnLbl").html(detail + ":");
            $("#cdnLbl").show();
            loadCdnProgBar(seconds);
            var pb = $("#progressBar").data("kendoProgressBar");
            pb.value(0);
            var interval = setInterval(function() {
                    if (pb.value() < seconds) {
                        pb.value(pb.value() + 1);
                    } else {
                        clearInterval(interval);
                    }
                },
                100);
        }

        // Saves the updated HTML to form variables prior to posting back to server.
        function saveContent() {
            var editor = $("#eContent").data("kendoEditor"); // Div editor
            var hiddenField = $("#Content"); // Corresponding hidden field.

            if (typeof editor !== 'undefined' && editor !== null) {
                // Object is a Kendo Editor
                var html = editor.value();
                hiddenField.val(html);
            } else {
                editor = $("#eContent");
                hiddenField.val(editor.html());
            }
        }

        function processKendoCtrls(roleName, dataName) {
            $(document).find("[data-role=" + roleName + "]").each(function() {
                var editor = $(this).data(dataName);
                var hid;
                var hidden;
                if (typeof editor !== 'undefined' && editor !== null) {
                    // Is a Kendo control
                    var elementId = editor.element.attr("id");
                    hid = editor.element.attr("id").substring(1, editor.element.attr("id").length);
                    hidden = $("#" + hid);
                    if (hidden === null || hidden === "undefined") {
                        alert("Could not find hidden field: " + hid);
                    } else {
                        hidden.val(editor.value());
                    }
                } else {
                    editor = $(this);
                    hid = editor.attr("id").substring(1, editor.attr("id").length);
                    hidden = $("#" + hid);
                    if (hidden === null || hidden === "undefined") {
                        alert("Could not find hidden field: " + hid);
                    } else {
                        hidden.val(editor.html());
                    }
                }
            });
        }

        function openVersionsDialog() {
            $("#versionsDialog").data("kendoDialog").open();
        }

        function goVersions() {
            $("#btnSave").click();
            window.location = "@Url.Action("Versions", "Editor")/" + $("#ArticleNumber").val();
        }

        function editCode() {
            $("#btnSave").click();
            window.location = "@Url.Action("EditCode", "Editor")/" + $("#Id").val();
        }

        function showCloseEditorDialog() {
            var dialog = $("#closeEditorDialog").data("kendoDialog");
            dialog.open();
        }

         $(document).ready(function () {

            loadPublishLocalDateTime();
            loadRoleListMultiSelect();
            loadEditors();

            // The following fixes URL on image click
            $(document).on("click", ".k-listview-item", function (e) {
                // Update image url
                fixUrl("#k-editor-image-url");
                // Update file url
                fixUrl("#k-editor-file-url");
            });

            // Button save edits event
            $("#btnSave").on("click",
                function(e) {
                    e.preventDefault();
                    if (ccmsEditorIsLocked === true) {
                        handlePost();
                    } else {
                        alert("Cannot save while locked by another user.");
                    }
             });
        });

        $(window).on("unload", function() {
           if (fileMgrPopup !== null) {
               fileMgrPopup.close();
           }
        });
    </script>
    <form id="frmLogout" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new {area = ""})">
        <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
    </form>
    <partial name="_ChatComponentsPartial" />
    @*
        Application Insights Scripts
    *@
    @await RenderSectionAsync("Scripts", false)
</body>
</html>