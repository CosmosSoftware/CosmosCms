@using NonFactors.Mvc.Grid
@model IQueryable<Cosmos.BlobService.FileManagerEntry>
@{
    ViewData["Title"] = "Folder List";
    Layout = "_LayoutNoToolbar";

    var publisherUrl = ViewData["PublisherUrl"];
    var isReviewer = User.IsInRole("Reviewers");
    var canEdit = User.IsInRole("Administrators") || User.IsInRole("Editors");
    var pathPrefix = (string)ViewData["PathPrefix"];
    var pathParts = new List<string>();

    if (!string.IsNullOrEmpty(pathPrefix) && pathPrefix != "/")
    {
        pathParts.AddRange(pathPrefix.Trim('/').Split('/'));
    }

    <div class="container mt-5 pt-2">
        <div class="row">
            <div class="col">
                <h3>@ViewData["Title"]</h3>
                <hr />
            </div>
        </div>
        @if (pathPrefix.StartsWith("/pub"))
        {
            <div class="row">
                <div class="col-md-12">
                    <!-- Filepond File Uploader -->
                    <input type="file"
                       class="filepond"
                       id="filepond"
                       name="files" data-file-metadata-path="@pathPrefix"
                       multiple>
                </div>
            </div>
        }
        <div class="row">
            <div class="col-md-12">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/FileManager/Index?target=/"><i class="fa-solid fa-house"></i></a></li>
                        @{
                            var p = "";
                        }
                        @foreach (var item in pathParts)
                        {
                            if (item != "/")
                            {
                                p += "/" + item;
                                <li class="breadcrumb-item"><a href="/FileManager/Index?target=@p">@item</a></li>
                            }
                        }
                    </ol>
                </nav>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @(Html.Grid(Model)
                .Build(col =>
                {
                    col.Add().RenderedAs((r, row) => $"<input type='checkbox' class='gridCheckBox' data-ccms-blob='{r.Path.Trim('/')}'>").Encoded(false).Titled("").Width("30px");
                    col.Add().RenderedAs(r => r.IsDirectory ? "<a href='/FileManager/Index?target=" + r.Name + "'><i class='fa-solid fa-folder'></i></a>" : "<div><i class='fa-solid fa-file'></i></div>").Titled("").Width("30px").Encoded(false).Sortable(false).Filterable(false);
                    col.Add(r => r.Name).RenderedAs(r => r.IsDirectory ? "<a href='/FileManager/Index?target=" + r.Path + "'>" + r.Name + "</a>" : "<a href=\"javascript:download('" + r.Path + "')\">" + r.Name + r.Extension + "</div>").Titled("Name").Encoded(false);
                    col.Add(r => r.Modified).Titled("Modified").Css("toLocalTimeZone").Filterable(GridFilterType.Double).Width("240px");

                })
                .Using(NonFactors.Mvc.Grid.GridFilterMode.Header)
                .Empty("No pages found")
                .Filterable()
                .Sortable()
                .Pageable(p => p.ShowPageSizes = true)
                 )
            </div>
        </div>
    </div>
}
