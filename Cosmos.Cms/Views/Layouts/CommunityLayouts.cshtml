@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "Import Open Source Layout";
}
<div class="container mt-5 pt-2">
    <div class="row">
        <div class="col">
            <h3>@ViewData["Title"]</h3>
            <hr />
            <p>
                Below is a list of open source layouts pre-packaged for you to use in your Cosmos CMS website.  All are open source
                and have documentation on how to use them.
            </p>
            <p>You can also <a class="text-light" href="@Url.Action("Create")">create a new layout of your own</a>.</p>

            @(Html.Kendo().Grid<Cosmos.Cms.Data.Logic.LayoutCatalogItem>().Name("grid")
            .Columns(col =>
            {
            col.Bound(m => m.Name).Title("").ClientTemplate("<a class='btn btn-primary' title='Import community layout.' href='" + @Url.Action("ImportCommunityLayout") + "/#: Id#'>Import</a>");
            col.Bound(m => m.Id).Title("Preview").ClientTemplate("<a target='_blank' title='Open layout' href='https://cosmos-layouts.moonrise.net/Layouts/#: Id#/layout.html'><img  height='120' src='https://cosmos-layouts.moonrise.net/Layouts/#: Id#/preview.jpg' /></a>");
            col.Bound(m => m.Name).Title("Name");
            col.Bound(m => m.License).Encoded(false).Title("License");
            col.Bound(m => m.Description).Encoded(false).Title("Notes/Description").Width("50%");
            })
            .ClientDetailTemplateId("template")
            .Pageable()
            .ToolBar(tool => { tool.Search(); })
            .DataSource(data =>
            {
            data.Ajax().Model(m => { m.Id("Id"); }).Read("Read_CommunityLayouts", "Layouts");
            })
            )
        </div>
    </div>
</div>

<script id="template" type="text/kendo-tmpl">
    <p>Template pages that come with this layout:</p>
    @(Html.Kendo().Grid<Cosmos.Cms.Data.Logic.Page>()
             .Name("grid_#=Id#")
             .Columns(columns =>
             {
                columns.Bound(o => o.Title);
                columns.Bound(o => o.Type);
                columns.Bound(o => o.Description);
             })
             .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(5)
                .Read(read => read.Action("Read_LayoutTemplatePages", "Layouts", new{ Id = "#=Id#" })))
            .Pageable()
            .Sortable()
            .ToClientTemplate())
</script>

