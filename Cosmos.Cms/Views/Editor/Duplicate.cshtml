@model DuplicateViewModel
@using Cosmos.Cms.Common.Models
@{
    ViewData["Title"] = "New Page";
    var original = (ArticleViewModel)ViewData["Original"];
}

<div class="container mt-5 pt-2">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h3>@ViewData["Title"]</h3>
            <h5>Create new web page from an existing one.</h5>
        </div>
    </div>
    <hr />
    <div class="row justify-content-center">
        <div class="col-md-6">
            <p><a target="_blank" href="@Url.Action("Preview", "Home", new { Id = original.Id})" title="Click to open">Original page: &quot;@original.Title&quot; | Version: &quot;@original.VersionNumber&quot;</a></p>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-md-6">
            <form method="post" asp-action="Duplicate" asp-controller="Editor" class="g-3 needs-validation" novalidate>
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id)
                @Html.HiddenFor(m => m.ArticleId)
                @Html.HiddenFor(m => m.ArticleVersion)
                <div class="mb-3">
                    <div asp-validation-summary=All class="text-danger"></div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Parent page:</label>
                    @(Html.Kendo().DropDownListFor(m => m.ParentPageTitle).OptionLabel("Parent page (optional)").HtmlAttributes(new { style = "width: 100%;"}).DataTextField("Title")
                    .DataValueField("Title")
                    .DataSource(source => {
                    source.Read(read =>
                    {
                    read.Action("GetArticleList", "Editor");
                    })
                    .ServerFiltering(false);
                    })
                    )
                    <p class="form-text">Selecting a parent page will make the new page a sub-page. </p>
                    <p class="form-text">For example: "Blog" might be the parent page and this 
                        page might be "Tips". The URL for this page will be: "/Blog/Tips".</p>
                </div>
                <div class="mb-3">
                    <label asp-for="Title" class="form-label"></label><span asp-validation-for="Title" class="text-danger"></span>
                    @(Html.Kendo().TextBoxFor(m => m.Title).HtmlAttributes(new { style = "width: 100%;", @class = "form-control" }))
                    <p class="form-text">Note: Web page titles must be unique.</p>
                    
                </div>
                <div class="mb-3">
                    <label asp-for="Published" class="form-label"></label><span asp-validation-for="Published" class="text-danger"></span>
                    @(Html.Kendo().DateTimePickerFor(m => m.Published.Value.UtcDateTime).HtmlAttributes(new { @class = "form-control" }))
                    <p class="form-text">This is the date/time when this page is published.  Clear this to make this page not visible to the public.</p>
                    
                </div>
                <div class="mb-3">
                    <button class="btn btn-primary" type="submit">Create New</button>
                    <a class="btn btn-primary" asp-action="Versions" asp-route-id="@original.ArticleNumber">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
}