@using Cosmos.Cms.Services
@using NonFactors.Mvc.Grid
@model IQueryable<ArticleVersionViewModel>
@{
    // /Views/Editor/Versions
    ViewData["Title"] = @ViewData["ArticleTitle"] + "Page Versions";
    var isReviewer = User.IsInRole("Reviewers");
    var isAuthor = User.IsInRole("Authors");
}

<div class="container mt-5 pt-2">
    <div class="row">
        <div class="col-md-6">
            <h3>Versions for: &quot;@ViewData["ArticleTitle"]&quot;</h3>
        </div>
        <div class="col-md-6 d-flex justify-content-end">
            <a title="Return to page list" class="mt-2" href="@Url.Action("Index")">Page list <i class="fa-solid fa-circle-arrow-right"></i></a>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-6">
            @if (!isReviewer)
            {
                <a id="btnNewVersion" class="btn btn-sm btn-secondary"
               title="New version created from the lastest."
               asp-action="CreateVersion" asp-route-id="@ViewData["ArticleId"]">New</a>
            }
        </div>
        <div class="col-md-6 d-flex justify-content-end">
            <a title="Manage Redirects" class="btn btn-sm btn-secondary" asp-action="Redirects">Redirects</a>
            <a title="Manage Trash" class="btn btn-sm btn-secondary" asp-action="Trash">Trash</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @(
                Html.Grid(Model)
                .Build(c =>
                {
                    c.Add(i => i.Id).Hidden();
                    c.Add(i => i.VersionNumber).RenderedAs(r => "v." + r.VersionNumber).Titled("").Width("30px").Filterable(false);
                    // Preview
                    c.Add(i => i.Id)
                    .RenderedAs(r => "<a target='_blank' title='Preview' href='/Home/Preview/" + r.Id + "'><i class='fas fa-search'></i></a>" +
                    // Code editor (Monaco)
                    (((isAuthor && r.Published != null) || (isReviewer)) ? "" : "<a title='Open code editor' href='/Editor/EditCode/" + r.Id + "'><i class='fa-solid fa-code'></i></a>") +
                    // Html WYSIWYG editor
                    (((isAuthor && r.Published != null) || (isReviewer) || r.UsesHtmlEditor == false) ? "" :
                    "<a title='Open Html WYSIWYG editor' href='/Editor/Edit/" + r.Id + "'><i class='fa-brands fa-html5'></i></a>") +
                    // Export
                    ((isReviewer) ? "" : "<a title='Open Html WYSIWYG editor' href='/Editor/ExportPage/" + r.Id + "'><i class='fa-solid fa-cloud-arrow-down'></i></a>")
                    )
                    .Titled("")
                    .Width("90px")
                    .Encoded(false).Sortable(false).Filterable(false);
                    c.Add(i => i.Updated).Filterable(GridFilterType.Double).Css("toLocalTimeZone");
                    c.Add(i => i.Published).Filterable(GridFilterType.Double).Css("toLocalTimeZone").RenderedAs(r => r.Published.HasValue ? r.Published : "DRAFT");
                    c.Add(i => i.Expires).Filterable(GridFilterType.Double).Css("toLocalTimeZone");
                    // Promoteto new version
                    c.Add(i => i.Id)
                    .RenderedAs(r => ((isAuthor && r.Published != null) || (isReviewer)) ? "" :
                    $"<a title='Promote this version to the latest version and put it in edit mode' href='/Editor/CreateVersion?id={ViewData["ArticleId"]}&entityId=" + r.Id + "'><i class='fa fa-arrow-circle-up'></i></a>")
                    .Titled("Promote")
                    .Width("30px")
                    .Encoded(false).Sortable(false).Filterable(false);
                })
                .Using(NonFactors.Mvc.Grid.GridFilterMode.Header)
                .Empty("No data found")
                .Filterable()
                .Sortable()
                .Pageable()
                )
        </div>
    </div>
    
    <div class="row">
        <div class="col d-flex justify-content-end">
            <a title="Return to page list" class="mt-2" href="@Url.Action("Index")">Page list <i class="fa-solid fa-circle-arrow-right"></i></a>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $(".toLocalTimeZone").each(function (index, element) {
            $(element).html(getLocalTime($(element).html()));
        });
    });
</script>