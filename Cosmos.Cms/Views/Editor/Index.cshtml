@using Cosmos.Cms.Services
@using NonFactors.Mvc.Grid
@model IQueryable<ArticleListItem>
@{
    ViewData["Title"] = "Page List";

    var publisherUrl = ViewData["PublisherUrl"];

    var versions = $"<a class=\"btn btn-sm btn-primary\" href=\"{Url.Action("Versions", "Editor")}/#: ArticleNumber #\" title=\"See a list of versions for this page\"><span class='fa fa-files-o'></span> Edit</a>";
    var copyUrl = "<button class=\"clipboard btn btn-sm btn-primary\" data-clipboard-text=\"#: UrlPath #\"  title='Click to copy url'><span class='fa fa-clipboard'></span> Copy URL</button>";
    var btnGroup = "<div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"Basic example\">#= getNewHomeButton(IsDefault, LastPublished, ArticleNumber) #" +
                   versions + copyUrl + "#= getStatusBadge(LastPublished, UrlPath) #</div>";

    var canEdit = User.IsInRole("Administrators") || User.IsInRole("Editors");
}
<script src="~/js/clipboard.min.js"></script>
<div class="container mt-5 pt-2">
    <div class="row">
        <div class="col">
            <h3>@ViewData["Title"]</h3>
            <hr />
            @if (canEdit || User.IsInRole("Authors"))
            {
                <a class="btn btn-sm btn-primary" asp-action="Create">New Page</a>
                <a asp-action="Redirects">Manage Redirects</a>
            }
            @(Html.Grid(Model)
                .Build(col =>
                {
                    col.Add(model => Html.ActionLink("", "Versions", "Editor", new { Id = model.ArticleNumber }, new { @class = "btn btn-sm fa-solid fa-play",title = "Select" })).Width("30px");
                    col.Add(b => b.IsDefault).RenderedAs(b => b.IsDefault == true ? "<i title='Is Home Page' class='fa-solid fa-house-user'></i>" : "").Titled("").Encoded(false).Sortable(false).Filterable(false).Width("30px");
                    col.Add(b => b.ArticleNumber).Titled("#").Css("text-center").Sortable(false).Filterable(false).Width("80px");
                    col.Add(b => b.Title).Titled("Title").RenderedAs(b => b.LastPublished.HasValue ? "<a target='_blank' href='/" + b.UrlPath + "'>" + b.Title + "</a>" : b.Title).Encoded(false).Filterable(GridFilterCase.Lower);
                    col.Add(b => b.Updated).Titled("Updated").Filterable(GridFilterType.Double);
                    col.Add(b => b.LastPublished).Titled("Published").Filterable(GridFilterType.Double);
                    if (canEdit)
                    {
                        col.Add().RenderedAs(b => b.IsDefault == true ? "" : "<button type='button' onclick='selectArticle(" + b.ArticleNumber + ", \"" + b.Title + "\")' class='btn btn-primary' data-bs-toggle='modal' data-bs-target='#delConfModal'><i title='Send to trash' class='fa-solid fa-trash'></i></button>").Encoded(false);
                    }
                })
                .Using(NonFactors.Mvc.Grid.GridFilterMode.Header)
                .Empty("No data found")
                .Filterable()
                .Sortable()
                .Pageable()
                )
            <form>
                <input id="selected" type="hidden" />
            </form>
        </div>
    </div>
</div>
<script>
    var canEdit = @canEdit.ToString().ToLower();
    var clipboard = new ClipboardJS('.clipboard');
    clipboard.on('success',
        function(e) {
            console.info('Action:', e.action);
            console.info('Text:', e.text);
            console.info('Trigger:', e.trigger);
            alert("Copied: " + e.text);
            e.clearSelection();
        });

    function getStatusBadge(published, urlPath) {
        if (published === null) {
            return "<a title=\"This page not published.\" class='btn btn-sm btn-secondary'><span class='fa fa-circle-o-notch'></span></a>";
        }
        var url = urlPath.replace("root", "");
        return "<a target=\"_blank\" title=\"This page was published as of " + kendo.toString(published, "G") + ". Click to view.\" class='btn btn-sm btn-primary' href=\"" + url + "\"><span class=\"fa fa-external-link\"></span></a>";
    }

    function getNewHomeButton(isDefault, published, articleNumber) {
        if (isDefault === null || isDefault === false) {
            if (published === null) {
                return "<div onclick=\"clickAlert('This page cannot be made the home page until it is published.')\" class='btn btn-sm btn-warning' title='This page cannot be made the home page until it is published.'><span class='fa fa-power-off'></span></div>";
            } else {
                if (canEdit) {
                    return "<a href='@Url.Action("NewHome")/" + articleNumber + "' title='Set this page as the new home page.' class='btn btn-sm btn-secondary'><span class='fa fa-home'></span></a>";
                } else {
                    return "<div onclick=\"clickAlert('Only administrators or editors can change the home page.')\" class='btn btn-sm btn-warning' title='Only administrators or editors can change the home page.'><span class='fa fa-power-off'></span></div>";
                }
            }
        }
        return "<div class='btn btn-sm btn-success' title='Is now the home page for this website.'><span class='fa fa-home'></span></div>";
    }

    function getHtmlEditBtn(usesHtmlEditor) {
        if (usesHtmlEditor !== null && usesHtmlEditor === true) {

        }
    }

    function clickAlert(msg) {
        alert(msg);
    }

    function formatPublishedDate(published) {
        if (published === null) {
            return "Draft";
        } else {
            return kendo.toString(published, 'G');
        }
    }

    function onDataBound(e) {
        var rows = e.sender.dataSource.total();
    }

    var articleNumber;
    var articleTitle;

    function selectArticle(articleNo, title) {
        articleNumber = articleNo;
        $("#articleTitle").html("&quot;" + title + "&quot;");
        return true;
    }

    function sendToTrash() {
        window.location.href = "@Url.Action("TrashArticle", "Editor")/" + articleNumber;
    }

</script>

<!-- Modal -->
<div class="modal fade" id="delConfModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this page?</p>
                <p class="fs-5" id="articleTitle"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="sendToTrash()">Confirm</button>
            </div>
        </div>
    </div>
</div>