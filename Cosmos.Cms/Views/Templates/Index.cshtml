@model IQueryable<TemplateIndexViewModel>
@using NonFactors.Mvc.Grid
@{
    Layout = "_Layout";
    ViewData["Title"] = "Page Template List";
}

<div class="container mt-5 pt-2">
    <div class="row">
        <div class="col">
            <h3>@ViewData["Title"]</h3>
            <hr />
            <p>Page templates are pre-build web pages that can help quickly build your website.</p>
            <p>Create a new template by clicking &quot;New&quot; below.</p>
        </div>
    </div>
    <div class="row">
        <div class="row">
            @(Html.Grid(Model)
            .Build(columns =>
            {
            @*columns.Command(command =>
            {
            command.Custom("Code").Click("editDetails").IconClass("fa fa-edit").Text(" ");
            command.Custom("Preview").Click("clickPreview");
            command.Custom("Preview Edit").Click("clickEditPreview");
            }).Width(300);*@
                    columns.Add(m => m.Id).Hidden();
                    columns.Add(m => m.LayoutName);
                    columns.Add(m => m.Title);
                    @*columns.Add(command => { command.Destroy(); });*@
            })
            @*.ToolBar(toolbar =>
            {
            toolbar.Save().SaveText("Save");
            toolbar.Create().Text("New");
            })*@
            .Pageable()
            .Sortable()
            @*.DataSource(dataSource => dataSource
            .Ajax()
            .Batch(true)
            .PageSize(20)
            .ServerOperation(false)
            .Events(events => events.Error("error_handler"))
            .Model(model => model.Id(p => p.Id))
            .Create("Templates_Create", "Templates")
            .Read("Templates_Read", "Templates")
            .Update("Templates_Update", "Templates")
            .Destroy("Templates_Destroy", "Templates")*@
            )
            @*.ClientDetailTemplateId("detail-template")*@
            )
        </div>
    </div>
</div>
<script type="text/javascript">

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors,
                function(key, value) {
                    if ('errors' in value) {
                        $.each(value.errors,
                            function() {
                                message += this + "\n";
                            });
                    }
                });
            alert(message);
        }
    }

    function editDetails(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "@Url.Action("EditCode")/" + dataItem.Id;
    }

    function clickPreview(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.open("@Url.Action("Preview")/" + dataItem.Id);
    }

    function clickEditPreview(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.open("@Url.Action("PreviewEdit")/" + dataItem.Id);
    }
</script>
<script id="detail-template" type="text/x-kendo-template">
    <strong>Description/Notes:</strong>
    <div>
        #: Description #
    </div>
</script>